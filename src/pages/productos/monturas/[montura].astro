---
import Layout from "../../../layouts/Layout.astro";
import type { Frames } from "../../../types/frames";
import FrameColors from "../../../components/frameColors";
import { getI18N } from "../../../i18n/";

const { currentLocale = "es" } = Astro;
const i18n = getI18N({ currentLocale });

const framesTexts = i18n.FRAMES.TEXTS;
const framesData = i18n.FRAMES.PRODUCTS;

const { montura } = Astro.params;

const product = framesData
  .flatMap((frameType: Frames) => frameType.products)
  .find((product) => product.slug === montura);


if (!product) {
  throw new Error(`Product not found for slug: ${montura}`);
}

const details = product.details;
---

<Layout title={product.name} description="">
  {
    <section
      class="w-[calc(100vw-5px)] py-[50px] flex items-center justify-evenly shadow-[0_20px_25px_-4px_rgba(7,107,97,0.5)]"
      >
      <article class="lg:w-1/3 flex flex-col gap-5">
          <h1 class="text-5xl">{product.name}</h1>
          <p class="text-lg">{details.detailed_description}</p>
      </article>
      <figure class="w-[400px] flex justify-center items-center">
        <img class="w-full" src={product.card_image} alt={product.name} />
      </figure>
    </section>
    <section class="w-full flex flex-col gap-[100px]">
    <article class="flex gap-[100px] justify-between items-center">
      <div class="flex flex-col gap-5">
        {details.intro_text_2 && <p>{details.intro_text_1}</p>}
        {details.intro_text_2 && <p>{details.intro_text_2}</p>}
        {details.intro_text_3 && <p>{details.intro_text_3}</p>}
      </div>
      <img 
        src={details?.intro_image}
        alt="" 
        class="w-[500px] "
        style="border-radius: 43% 57% 32% 68% / 61% 52% 48% 39%;" 
      />
    </article>   
    <FrameColors client:visible frame={product.name} colors={details.colors} />     
  </section>
  
  <section class="w-full flex gap-[100px]">
    <article class="flex flex-col gap-5">
      <h3 class="text-2xl font-bold">{framesTexts.text_specs}</h3>
      <div class="flex flex-col flex-wrap max-h-[300px] gap-4">
        {details.specs?.materials && (
          <div>
            <h4 class="text-lg font-bold">{framesTexts.text_materials}</h4>
            <p set:html={details.specs.materials}></p>
          </div>
        )}

        {details.specs?.sizes && (
          <div>
            <h4 class="text-lg font-bold">{framesTexts.text_sizes}</h4>
            <p set:html={details.specs.sizes}></p>
          </div>
        )}

        {details.specs?.weight && (
          <div>
            <h4 class="text-lg font-bold">{framesTexts.text_weight}</h4>
            <p set:html={details.specs.weight}></p>
          </div>
        )}

        {details.specs?.light_intensity && (
          <div>
            <h4 class="text-lg font-bold">{framesTexts.text_light_intensity}</h4>
            <p set:html={details.specs.light_intensity}></p>
          </div>
        )}

        {details.specs?.color_rendering_index && (
          <div>
            <h4 class="text-lg font-bold">{framesTexts.text_color_rendering_index}</h4>
            <p set:html={details.specs.color_rendering_index}></p>
          </div>
        )}

        {details.specs?.color_temperature && (
          <div>
            <h4 class="text-lg font-bold">{framesTexts.text_color_temperature}</h4>
            <p set:html={details.specs.color_temperature}></p>
          </div>
        )}

        {details.specs?.est_charge_time && (
          <div>
            <h4 class="text-lg font-bold">{framesTexts.text_est_charge_time}</h4>
            <p set:html={details.specs.est_charge_time}></p>
          </div>
        )}

        {details.specs?.est_batery_life && (
          <div>
            <h4 class="text-lg font-bold">{framesTexts.text_est_battery_life}</h4>
            <p set:html={details.specs.est_batery_life}></p>
          </div>
        )}

        {details.specs?.included_batteries && (
          <div>
            <h4 class="text-lg font-bold">{framesTexts.text_included_batteries}</h4>
            <p set:html={details.specs.included_batteries}></p>
          </div>
        )}
      </div>
    </article>
    <article>
      <h3 class="text-2xl font-bold">Opciones de lupa</h3>
      <div class="flex flex-col">
        {
          details.loupe_options?.map((option) => (
            <a
              href={`../lupas/${option.slug}`}
              class="hover:underline"
            >
              {option.name}
            </a>
          ))
        }
      </div>
    </article>
  </section>
  }
</Layout>